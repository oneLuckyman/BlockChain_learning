13875
14:02:30,710 --> 14:02:33,620
So in its minimalistic sense, we essentially have a way for people to enter our raffle. 
从最简化的角度来看，我们已经为用户基本上提供了参与我们抽奖的途径了

13876
14:02:33,620 --> 14:02:37,070
Now we need a way to pick the random winner. And this is where we're going to need chain link VRF and chain link keepers. 
现在我们需要一个方法来选出一名随机的优胜者，这里就要用 Chainlink VRF 以及 Chainlink Keepers 了

13877
14:02:37,100 --> 14:02:40,040
So let's again, watch some sub lessons about learning about chain link VRF. And learning about chain link keepers. 
所以让我们再次观看一些子课程，来学习一下 Chainlink VRF 以及 Chainlink Keepers

13878
14:02:40,040 --> 14:02:43,310
We've made some videos about these before. So we're just going to play these videos. 
我们之前已经制作了一些相关视频，所以我们会直接播放这些视频

13879
14:02:43,340 --> 14:02:46,550
So you can learn about how taling VRF version two works, and also how chain link keepers works, 
你可以学到关于 Chainlink VRF 版本 2 还有 Chainlink Keepers 的工作原理

13880
14:02:46,550 --> 14:02:49,340
then we're going to come back and we're going to add them into our contracts here. 
然后我们会回到这里，并将它们添加到我们的合约中来

13881
14:02:49,340 --> 14:02:51,440
If you're already familiar, and you already played with them, feel free to skip those sections. 
如果你已经很熟悉，并且使用过它们了，那么你可以自由跳过这些部分

13882
14:02:51,440 --> 14:02:54,320
And we'll just get to building them here.
然后我们会直接开始构建它们

13883
14:02:54,350 --> 14:02:56,870
Hi, my name is Steven fluid. And today we're going to be taking a look at chain links VRF. version two, 
大家好，我是 Stephen Fluin，今天我们要来看一下 Chainlink VRF 版本 2

13884
14:02:56,870 --> 14:02:59,090
version two has a few different mental models that we should be aware of. 
VRF 版本 2 具有一些不同的思维模式，我们应当注意到这一点

13885
14:02:59,090 --> 14:03:01,340
And I want to show you what it feels like to be using it. 
并且我要向你们展示一下它的使用体验是什么样的

13886
14:03:01,340 --> 14:03:03,710
The big important thing to know about Vera version two is that instead of the Vera one model 
VRF 版本 2 和版本 1 的模式相比有一个重要的事情需要知道

13887
14:03:04,160 --> 14:03:06,680
where you'd be funding your contract with Link, instead, you're going to be funding a subscription, 
你不再是通过 Link 向你的合约输入资金，而是资助一个订阅

13888
14:03:06,680 --> 14:03:10,160
which is basically an account that allows you to fund and maintain balance for multiple consumer contracts. 
它基本上就是一个允许你为多个用户合约提供资金和维持余额的账户

13889
14:03:10,160 --> 14:03:12,890
Let's dive into the docs and see what using Vera fie two looks and feels like. 
让我们深入到文档中，看一下 VRF 版本 2 的外观和使用体验

13890
14:03:12,890 --> 14:03:15,440
In order to show this off a little bit. I'm going to dive right into the get a random number guide in the chain link documentation. 
为了展示这一点，我要深入到 Chainlink 文档中的 "Get a Random Number" 指南

13891
14:03:15,440 --> 14:03:18,620
And so it's going to go through a few the requirements of some of the technology we're going to use today. 
它会介绍我们今天要使用的一些技术的一些要求

13892
14:03:18,620 --> 14:03:21,200
And the first thing it's going to ask us to do is to make sure that we are on the Rinkeby test net. 
首先我们要做的是，确保我们已经连上了 Rinkeby 测试网

13893
14:03:21,200 --> 14:03:24,380
So let's go ahead and jump over to Rinkeby. Make sure my meta mask is unlocked here. 
所以让我们先连上 Rinkeby，解锁我的 MetaMask

13894
14:03:24,620 --> 14:03:27,170
And now that I'm on Rinkeby, great, 
现在我已经在 Rinkeby 上了，非常好

13895
14:03:27,170 --> 14:03:31,550
I should be able to use the VIP version to test net. 
我应该能够在测试网上使用 VRF 版本 2 

13896
14:03:31,550 --> 14:03:34,760
Now we're going to jump over to subscription manager. 
现在我要进入“订阅管理”("Subscription Manager")

13897
14:03:34,760 --> 14:03:37,730
And the subscription manager is where we're going to manage our subscription account. 
"Subscription Manager" 是我们管理订阅账户的地方

13898
14:03:37,730 --> 14:03:40,700
Basically, this is the place that you put the funds in order to be able to use it across a bunch of different chains. 
基本上，这就是你放置资金的地方，以便你能够进行跨链使用

13899
14:03:40,700 --> 14:03:43,160
So we're going to go ahead and connect our wallet here in order to use the subscription app. 
我们继续，连接我们的钱包以使用订阅应用

13900
14:03:43,160 --> 14:03:44,870
And then we're going to go ahead and create a new subscription. 
接着我们来创建一个新的订阅("Create subscription")

13901
14:03:44,870 --> 14:03:47,630
So we'll just use my address as the subscription address here. 
这里我直接用我的地址作为订阅地址

13902
14:03:47,630 --> 14:03:50,120
I'll approve the creation. 
同意创建

13903
14:03:50,120 --> 14:03:53,720
And as soon as that transaction is confirmed, our subscription should be created. 
一旦交易确认，我们的订阅应该也就创建好了

13904
14:03:54,200 --> 14:03:57,890
Alright, now we have a subscription. Basically, this is the account where we're going to fund it. 
好的，现在我们有了一个订阅，也就是我们要注入资金的账户

13905
14:03:58,220 --> 14:04:02,420
And then we can use that account for all of our random Miss requests. 
接着我们就可以用这个账户来进行我们所有的随机数请求

13906
14:04:02,420 --> 14:04:05,630
So I'm gonna go ahead and just put in 10 link here, 


13907
14:04:05,630 --> 14:04:07,580



13908
14:04:07,640 --> 14:04:10,370



13909
14:04:10,370 --> 14:04:13,130



13910
14:04:13,130 --> 14:04:16,010



13911
14:04:16,010 --> 14:04:20,090



13912
14:04:20,150 --> 14:04:22,760



13913
14:04:22,760 --> 14:04:27,200



13914
14:04:27,200 --> 14:04:29,420



13915
14:04:29,420 --> 14:04:33,230



13916
14:04:33,230 --> 14:04:35,300



13917
14:04:35,510 --> 14:04:38,990



13918
14:04:38,990 --> 14:04:42,140



13919
14:04:42,140 --> 14:04:46,880
you can put in however much you want. The price and link of


13920
14:04:46,880 --> 14:04:49,520
every random number you request, it's going to be based on the


13921
14:04:49,550 --> 14:04:54,320
current gas rates on a given chain, as well as the gasoline


13922
14:04:54,320 --> 14:04:57,320
that you've chosen. On our funds have been added, let's go ahead


13923
14:04:57,320 --> 14:05:00,290
and add a consumer contract. So it's asking us for consumer


13924
14:05:00,290 --> 14:05:02,780
address, we don't actually have a consumer address yet. So let's


13925
14:05:02,780 --> 14:05:06,380
go ahead and jump over to the documentation and create a


13926
14:05:06,380 --> 14:05:09,560
contract that is going to request a number. So if you


13927
14:05:09,560 --> 14:05:12,320
scroll down, you're going to see this Vera fee to consumer that


13928
14:05:12,320 --> 14:05:14,960
soul contract that we can open it in remix, let's just jump


13929
14:05:14,990 --> 14:05:18,290
right there. We're gonna notice a few different things in this


13930
14:05:18,290 --> 14:05:20,870
contract at the top, we've got some input. So now you've got


13931
14:05:20,870 --> 14:05:23,720
VRF, consumer base version two, we've got an interface for the


13932
14:05:23,720 --> 14:05:27,320
VRF coordinator, and then also a reference to the link token


13933
14:05:27,320 --> 14:05:30,530
interface. So all of those are specified for you on the Rinkeby


13934
14:05:30,530 --> 14:05:33,620
network here in the example code. And then you can refer to


13935
14:05:33,620 --> 14:05:35,570
the documentation for whatever chain you're going to be


13936
14:05:35,570 --> 14:05:39,620
deploying to. And then you're going to see a few new options


13937
14:05:39,620 --> 14:05:43,190
here. So the key hash option is the way that you specify that


13938
14:05:43,190 --> 14:05:46,370
gasoline that was described in the documentation. So depending


13939
14:05:46,370 --> 14:05:49,640
on the key hash you choose for the given chain you're on the


13940
14:05:49,640 --> 14:05:53,480
gas limit will be set differently for your random


13941
14:05:53,480 --> 14:05:56,510
number requests. So for example, on a theory main net, we have a


13942
14:05:56,510 --> 14:06:00,680
200 way key hash 500 Wiki hash and 1000 graykey hash. You can


13943
14:06:00,680 --> 14:06:03,410
also see in our contract Hear that we have a callback estimate


13944
14:06:03,410 --> 14:06:06,290
that you're in charge of. So depending on how much gas you're


13945
14:06:06,290 --> 14:06:09,530
willing to spend in the fulfill random number, you should set


13946
14:06:09,530 --> 14:06:13,640
this value appropriately. Next up is request confirmations. So


13947
14:06:13,640 --> 14:06:15,950
this was something in verify would be one that you could not


13948
14:06:15,950 --> 14:06:18,050
control. But here now, depending on the chain you're on,


13949
14:06:18,050 --> 14:06:20,600
depending on the request and the type nature of the request you


13950
14:06:20,600 --> 14:06:24,200
want to make, you can actually change this number. And then one


13951
14:06:24,200 --> 14:06:26,600
of the most important and useful features that gives you a lot


13952
14:06:26,600 --> 14:06:30,350
more flexibility and control of your VRF is you can actually


13953
14:06:30,350 --> 14:06:34,010
specify the number of random numbers you want. And so you


13954
14:06:34,010 --> 14:06:36,800
specify the number words, and then that will specify how many


13955
14:06:36,800 --> 14:06:42,560
random you went to 56 as you get back from the network. All right


13956
14:06:42,560 --> 14:06:45,800
here in the constructor, we're gonna see a address for the


13957
14:06:45,800 --> 14:06:48,380
coordinator and address for the link token. And then you'll see


13958
14:06:48,380 --> 14:06:50,810
that the subscription ID is going to be created as we deploy


13959
14:06:50,810 --> 14:06:54,260
the contract. And so I'm gonna go ahead and get that. So if you


13960
14:06:54,260 --> 14:06:56,330
remember when we created the subscription after we found it,


13961
14:06:56,330 --> 14:06:59,060
and we see this subscription ID, and now when I deploy this, I'm


13962
14:06:59,060 --> 14:07:01,520
going to use that subscription ID. And we've got two methods


13963
14:07:01,520 --> 14:07:05,000
that should look very familiar, we've got fulfill randomness


13964
14:07:05,000 --> 14:07:07,940
method that takes in randomness is going to be fulfilled by the


13965
14:07:07,940 --> 14:07:10,970
Bureau of Oracle, as well as you got request random words, which


13966
14:07:10,970 --> 14:07:13,130
is how we're actually going to initiate the request to the


13967
14:07:13,130 --> 14:07:15,830
Oracle. So I think we're actually are already ready to go


13968
14:07:15,830 --> 14:07:18,620
ahead and deploy this. So let's jump to the deploy screen here


13969
14:07:19,010 --> 14:07:21,800
and select the right contract, which in our case, is your FB to


13970
14:07:21,800 --> 14:07:24,800
consumer. And I'm going to make sure that I am on injected web


13971
14:07:24,800 --> 14:07:26,900
three so that we can actually deploy to the Rinkeby network.


13972
14:07:27,770 --> 14:07:29,990
And I'm going to paste in the subscription ID here. And I'm


13973
14:07:29,990 --> 14:07:33,140
going to deploy, let's go ahead and pay for that transaction.


13974
14:07:35,870 --> 14:07:38,660
And as soon as that is confirmed by the network will show up


13975
14:07:38,660 --> 14:07:41,690
here, and we'll be able to copy this address, and then add that


13976
14:07:41,690 --> 14:07:45,860
as a consumer and authorize this contract to use my subscription


13977
14:07:45,860 --> 14:07:51,830
account. So let's go ahead and authorize this with them another


13978
14:07:51,830 --> 14:07:52,790
Metamask transaction.


13979
14:07:56,390 --> 14:07:58,130
Alright, we can have your subscription, we can see how


13980
14:07:58,130 --> 14:08:00,830
much link we funded it with. And we can see our consumer


13981
14:08:00,830 --> 14:08:04,190
contract. So now by doing this, we've authorized our consumer


13982
14:08:04,190 --> 14:08:08,360
contract to make requests for randomness. So let's go ahead


13983
14:08:08,360 --> 14:08:10,820
and make a request for randomness here. So we're gonna


13984
14:08:10,820 --> 14:08:14,000
go back to our contract that we deployed here. And we're just


13985
14:08:14,000 --> 14:08:16,460
gonna use the remix interface here to keep things simple. And


13986
14:08:16,460 --> 14:08:19,460
I'm going to request some randomness. So obviously, this


13987
14:08:19,460 --> 14:08:23,090
is going to use all of the configuration that I specified


13988
14:08:23,090 --> 14:08:25,250
in my contract, just kind of hard coded here. So we're gonna


13989
14:08:25,250 --> 14:08:27,890
get to words of random is here. So we're gonna hit request


13990
14:08:27,890 --> 14:08:32,450
randomness, confirm the Rigby transaction. And then as soon as


13991
14:08:32,450 --> 14:08:35,000
that transaction comes back, we should notice that we actually


13992
14:08:35,000 --> 14:08:38,360
have a request. And then what we'll be doing is we'll be


13993
14:08:38,360 --> 14:08:41,930
waiting for the Oracle to call fulfill random words on our


13994
14:08:41,930 --> 14:08:44,390
contract. And then we'll be storing all of those random


13995
14:08:44,390 --> 14:08:48,710
words in this s random words, storage variable. Let's go ahead


13996
14:08:48,710 --> 14:08:50,750
and check to see if our random numbers come back from the


13997
14:08:50,750 --> 14:08:53,630
Oracle. So I'll go in here into random words. And let's request


13998
14:08:53,630 --> 14:08:56,330
the zeroeth item of the array looks like we've got a random


13999
14:08:56,330 --> 14:08:58,970
number there. And because we requested two random numbers, we


14000
14:08:58,970 --> 14:09:03,800
should also have an item in index one. All right, we we've


14001
14:09:03,800 --> 14:09:06,470
got our randomness there. And if we go back to the subscription


14002
14:09:06,470 --> 14:09:09,620
manager app, you're going to see that there's actually an event


14003
14:09:09,620 --> 14:09:11,960
history item here, we'll see that we spent about point three,


14004
14:09:11,960 --> 14:09:16,370
three link to get those two random numbers, we've just taken


14005
14:09:16,370 --> 14:09:19,250
a journey to see what it looks like and feels like to use Veera


14006
14:09:19,250 --> 14:09:20,030
version two,


14007
14:09:20,180 --> 14:09:22,730
now that we've learned a little bit more about chainlink VRF, I


14008
14:09:22,760 --> 14:09:25,520
hope that you took some time to go to doxa chain link and play


14009
14:09:25,520 --> 14:09:28,070
around with it a little bit so that you understand what's


14010
14:09:28,070 --> 14:09:31,520
really going on, we're going to use this sample contract in here


14011
14:09:31,580 --> 14:09:34,340
to create our function that's going to pick our random winner.


14012
14:09:34,400 --> 14:09:36,740
This is an on chain contract that coordinates with a


14013
14:09:36,740 --> 14:09:40,340
verifiably random chain link node to give us a random number,


14014
14:09:40,370 --> 14:09:42,590
you could look at the code directly on chain, or you can


14015
14:09:42,590 --> 14:09:46,130
come right to the chain link GitHub and look at all the code


14016
14:09:46,130 --> 14:09:49,040
for how this is actually happening provably and randomly.


14017
14:09:49,100 --> 14:09:51,440
And we'll have a link to this in the GitHub repo associated with


14018
14:09:51,440 --> 14:09:56,540
this course. 