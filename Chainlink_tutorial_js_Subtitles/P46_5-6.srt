6387
06:17:01,480 --> 06:17:04,780
All right, this is fantastic. At this point, you should be set up with Visual Studio Code no Jas and get. 
太好了，真是太棒了。现在，你应该已经配置好了 Visual Studio Code, node.js 以及 Git。

6388
06:17:04,780 --> 06:17:09,520
And I'm going to be working out of a folder called Hard Hat Free Code Camp 
并且我将在一个名为 Hard Hat Free Code Camp(hh-fcc) 的文件夹下进行工作

6389
06:17:09,520 --> 06:17:12,550
at this point, you should have 
现在，你应该已经有了 

6390
06:17:12,550 --> 06:17:18,700
node, dash dash version, get dash dash
node --version 以及 git --version

6391
06:17:18,700 --> 06:17:22,930
And if you're using Windows, 
如果你使用的是 Windows

6392
06:17:22,930 --> 06:17:26,050
this should say WsL or your boon to or something like that. 
这里应该显示 WSL 或者 Ubuntu 或者其他类似的东西

6393
06:17:26,080 --> 06:17:29,650
And if you have all that, that means we're ready to go. 
如果这些你都有了，那就表示我们已经准备好了

6394
06:17:29,650 --> 06:17:33,340
Now a quick note something that you'll see me do a lot. And you can do this as well. 
现在我会对我经常做的一些操作做一个快速的解释，你也可以这样做

6395
06:17:33,490 --> 06:17:36,130
Oftentimes, when my terminal gets really, really big, or there's a ton of commands in here 
通常，当我的终端变得非常非常大，或者是有成吨的命令放在这里时

6396
06:17:36,130 --> 06:17:39,160
gets a little bit overwhelming for me. 
会让我感到有些困扰

6397
06:17:39,160 --> 06:17:42,580
So one thing that you can do is you can type clear, and hit Enter to clear it. 
你可以做的一个操作是输入 "clear"，并按回车以清除它们

6398
06:17:42,580 --> 06:17:47,560
Or what you can do is you can hit Command K, if you're on a Mac, 
你也可以按 "Command + k"，如果你是在 Mac 上

6399
06:17:47,560 --> 06:17:52,300
or Ctrl K, if you're on a Linux or a Windows, 
或者是 "Ctrl + k"，如果你是在 Linux 或 Windows 上

6400
06:17:52,300 --> 06:17:54,550
and it's one of my favorite keyboard shortcuts that I use all the time. 
这是我最喜欢的快捷键之一，我经常会使用它

6401
06:17:54,550 --> 06:17:58,930
Additionally, the trash can and the X here are very different. 
另外，这里的终止键和X键是非常不同的

6402
06:17:58,930 --> 06:18:02,590
If I go to a couple of enters here, and we're down here, 
比如说我在这里按几次回车，我们现在处于这个位置

6403
06:18:02,590 --> 06:18:06,280
if I hit the trashcan, and then pull my terminal back up,
如果我点击关闭，然后再把我的终端打开

6404
06:18:06,580 --> 06:18:10,090
by doing the toggle, or by doing terminal new terminal, 
通过切换，或是通过“终端-新建终端”

6405
06:18:10,090 --> 06:18:13,870
you'll see all those lines are still here. 
你可以看到这些行仍然还在这里

6406
06:18:14,260 --> 06:18:17,320
But if I hit the trashcan, and then pull the terminal back up, 
但如果我点击终止按钮，再把终端打开回来

6407
06:18:17,320 --> 06:18:22,090
you'll see it actually refreshes mine a special command that prints stuff out. 
你会看到它刷新了我的一个特殊指令，打印这些东西

6408
06:18:22,090 --> 06:18:24,400
trashing your terminal is basically deleting whatever's running in it, 
终止你的终端基本上就是删除其中运行的所有东西

6409
06:18:24,400 --> 06:18:29,380
and the x is just hiding it. 
而X键只是暂时隐藏它

6410
06:18:29,380 --> 06:18:32,170
And as hitting Ctrl tilde or toggling our terminal or whatever command it is on your environment, 
无论是使用 "Ctrl + ~" 还是切换我们的终端，或是你环境中的任何此类命令

6411
06:18:32,170 --> 06:18:35,470
that's equivalent to hitting the hide, not the trash. 
它都相当于点击隐藏而不是终止

6412
06:18:35,470 --> 06:18:38,860
So if we want to remove and start a terminal over, 
所以，如果我们想删除并重新启动一个终端

6413
06:18:38,860 --> 06:18:42,670
we hit the trashcan, and then we pull it back up. 
我们需要点击终止，然后再把它打开

6414
06:18:42,670 --> 06:18:44,980
Alright, so now we're gonna start working with ethers. 
好了，现在我们就要开始使用 ethers

6415
06:18:44,980 --> 06:18:48,670
And we're going to start learning to code, our transactions and our contract deployments 
并开始学习代码，交易，合约部署

6416
06:18:48,670 --> 06:18:51,730
and everything programmatically at a relatively low level. 
以及一切以编程方式存在的相对底层的东西

6417
06:18:51,730 --> 06:18:54,460
And we're gonna learn how to deploy and interact with the contracts using the ethers JS package. 
我们将学习如何使用 ether.js 包部署合约并与之交互

6418
06:18:54,460 --> 06:18:58,030
Now to get started,
现在让我们开始吧

6419
06:18:58,060 --> 06:19:00,670
I'm going to recommend you create a folder 
我建议你新建一个文件夹

6420
06:19:00,670 --> 06:19:02,740
where you're going to put all of your projects in it, 
并把你所有的项目都放到这个文件夹里

6421
06:19:02,740 --> 06:19:07,960
I'm going to create a new directory called H H. hyphen, FCC, 
我现在就新建一个文件夹名字叫 "hh-fcc" 

6422
06:19:07,960 --> 06:19:11,110
which stands for hard hat Free Code Camp. 
表示 "Hardhat Free Code Camp" 

6423
06:19:11,110 --> 06:19:15,520
And once we run that command, we can cd into hh FCC. 
运行完这个命令，我们就可以使用 "cd" 进入 "hh-fcc"

6424
06:19:15,520 --> 06:19:18,430
And this is where we'll create all of our projects for this course moving forward, so that we have them all in one place. 
这里就是我们这门课程用来创建所有项目的地方，它们全部放在这一个地方

6425
06:19:18,430 --> 06:19:21,640
Now to get started, whenever you create a new project, 
现在开始，每当你创建一个新项目时

6426
06:19:21,640 --> 06:19:25,210
you always want to create a new folder. 
你都要想着创建一个新文件夹

6427
06:19:25,210 --> 06:19:28,450
So to create a new folder, we're going to do MK dir, 
要想新建一个文件夹，我们输入 "mkdir"

6428
06:19:28,450 --> 06:19:35,950
and we're going to call this ethers, simple storage, like that. 
并把它叫做 "ethers-simple-storage" 就像这样

6429
06:19:35,950 --> 06:19:40,900
And now, if you type ls, you'll see that there is one folder named ethers, simple storage. 
现在，如果你输入 "ls"，你就会看到一个文件夹，名字是 "ethers-simple-storage"

6430
06:19:40,930 --> 06:19:45,670
ls is how you list all the contents of your folder. 
"ls" 就是你用来显示文件夹内所有内容的方法

6431
06:19:45,850 --> 06:19:49,450
You might have a lot of other folders in here, 
也许你这里还有很多其它文件夹

6432
06:19:49,450 --> 06:19:52,210
I only have the one since I created this new folder for this. 
而我这只有一个，因为我这里是一个新建的文件夹

6433
06:19:52,210 --> 06:19:57,490
Now what you can do, you can type code, ethers simple.


6434
06:19:57,880 --> 06:20:01,690
And then if you hit tab, it should autocomplete for you. And


6435
06:20:01,690 --> 06:20:06,940
if you enter, Visual Studio code should open up a new Visual


6436
06:20:06,940 --> 06:20:12,700
Studio code for you. That is inside of either simple storage


6437
06:20:13,060 --> 06:20:16,060
if you open up your terminal now, your home directory for


6438
06:20:16,060 --> 06:20:19,240
this workspace is going to be through simple storage as this


6439
06:20:19,240 --> 06:20:23,020
is what pops up. If that doesn't work for you, we can also do is


6440
06:20:23,020 --> 06:20:28,900
you can hit File, Open folder and then open the folder that


6441
06:20:28,900 --> 06:20:32,530
you just created or that you want to open this again we'll


6442
06:20:32,530 --> 06:20:35,680
open up VS code. And if we open up our terminal we see we're


6443
06:20:35,680 --> 06:20:38,980
inside of ether simple storage. This is so powerful because as


6444
06:20:38,980 --> 06:20:40,030
we create files


6445
06:20:41,560 --> 06:20:45,760
we'll be able to See those files in our Explorer here, this


6446
06:20:45,760 --> 06:20:48,850
button here stands for the Explorer. If we click it, we can


6447
06:20:48,850 --> 06:20:51,220
see the different files in here. And I'm going to go ahead and


6448
06:20:51,220 --> 06:20:54,700
actually delete this file dot txt, because we're not actually


6449
06:20:54,700 --> 06:20:57,430
going to use that. Now it's this part of the course, where we're


6450
06:20:57,430 --> 06:21:01,180
actually going to start jumping into some JavaScript. Since this


6451
06:21:01,180 --> 06:21:04,270
course is in JavaScript course, if you're unfamiliar with


6452
06:21:04,270 --> 06:21:07,630
JavaScript, it might be a little bit tricky. If you want to come


6453
06:21:07,630 --> 06:21:10,000
into this with a better understanding of JavaScript and


6454
06:21:10,000 --> 06:21:14,230
Node js, there is a Free Code Camp YouTube video teaching No,


6455
06:21:14,230 --> 06:21:17,530
Jas for beginners. And a link to this will be in the GitHub repo


6456
06:21:17,530 --> 06:21:20,800
associated with this course. There's also a JavaScript Free


6457
06:21:20,800 --> 06:21:23,680
Code Camp video that I'm also going to put in the description


6458
06:21:23,680 --> 06:21:26,770
for this course, keep in mind that JavaScript and Node js are


6459
06:21:26,770 --> 06:21:29,710
slightly different. And we are going to go over some of the


6460
06:21:29,710 --> 06:21:33,190
differences as we code along here. But for the most part,


6461
06:21:33,190 --> 06:21:35,680
learning one means you've learned the majority of the


6462
06:21:35,680 --> 06:21:38,590
other. So if you want to pause and go through these videos,


6463
06:21:38,590 --> 06:21:42,280
before continuing here, please feel free to do so you don't


6464
06:21:42,310 --> 06:21:45,910
have to, you can absolutely continue on with the course as


6465
06:21:45,910 --> 06:21:50,470
is. And if you get confused or stuck on some JavaScript piece,


6466
06:21:50,620 --> 06:21:54,100
feel free to pause, Google it and come back. But just to


6467
06:21:54,100 --> 06:21:56,170
reiterate, you can check out the JavaScript programming full


6468
06:21:56,170 --> 06:22:00,130
course. And also the Node js full course, as those are both


6469
06:22:00,130 --> 06:22:03,400
going to help you. Like I was saying before, Node js is a


6470
06:22:03,400 --> 06:22:08,230
JavaScript runtime. So it's not exactly JavaScript. But we're


6471
06:22:08,230 --> 06:22:10,990
going to write our code in JavaScript. And if that's


6472
06:22:10,990 --> 06:22:14,230
confusing, just don't worry about it right now. And as we go


6473
06:22:14,230 --> 06:22:17,110
through this course, I'll show you where the differences are.


6474
06:22:17,440 --> 06:22:20,320
But basically, you can think of no Jas and JavaScript kind of


6475
06:22:20,320 --> 06:22:23,800
being the same thing. The big thing about Node js is it allows


6476
06:22:23,800 --> 06:22:27,970
us to write JavaScript code in the back end, as opposed to


6477
06:22:28,000 --> 06:22:31,090
running JavaScript on the front end, JavaScript is made to be a


6478
06:22:31,090 --> 06:22:35,200
browser run language, like running inside of, you know,


6479
06:22:35,200 --> 06:22:40,780
Chrome, brave Firefox, etc. No, Jas allows it to become a a


6480
06:22:40,780 --> 06:22:43,840
scripting language, a back end language, which is why the


6481
06:22:43,840 --> 06:22:46,930
syntax between the front end JavaScript and the back end


6482
06:22:46,930 --> 06:22:49,330
JavaScript or the no JS JavaScript are going to be a


6483
06:22:49,330 --> 06:22:52,120
little bit different. Additionally, as we go along in


6484
06:22:52,120 --> 06:22:56,290
this code, if you're familiar with TypeScript, all of our code


6485
06:22:56,290 --> 06:22:59,200
is going to come with a TypeScript edition. TypeScript


6486
06:22:59,200 --> 06:23:03,340
is what's known as a statically typed version of JavaScript. And


6487
06:23:03,340 --> 06:23:05,650
it'll be it'll be this one. It'll be TypeScript, not


6488
06:23:05,650 --> 06:23:08,440
TypeScript edition. I'll go ahead and fix that and remove


6489
06:23:08,440 --> 06:23:11,260
this one to make it clear. TypeScript is a type safe


6490
06:23:11,290 --> 06:23:14,350
version of JavaScript, which is that's confusing, don't worry


6491
06:23:14,350 --> 06:23:17,110
too much about that. But we are going to do all of our


6492
06:23:17,110 --> 06:23:20,170
programming in JavaScript. And then if the code is different


6493
06:23:20,170 --> 06:23:22,600
enough, I'll show you how to do it in TypeScript as well.


6494
06:23:22,690 --> 06:23:24,460
However, for most of them, we're not going to show you the


6495
06:23:24,460 --> 06:23:26,950
TypeScript editions, because it's going to be really similar.


6496
06:23:27,040 --> 06:23:30,250
But you can always refer back to the GitHub repository to see all


6497
06:23:30,250 --> 06:23:32,980
the code for the TypeScript. Now, if you're new to this


6498
06:23:32,980 --> 06:23:36,850
space, I actually do recommend you go ahead and start with


6499
06:23:36,850 --> 06:23:40,180
JavaScript and learn how to do TypeScript later on. TypeScript


6500
06:23:40,180 --> 06:23:45,430
actually catches bugs early on, making it a lot easier to code


6501
06:23:45,460 --> 06:23:48,820
your projects in the long run. However, it does take a lot of


6502
06:23:48,820 --> 06:23:52,330
extra typing. And it can be a little bit frustrating learning


6503
06:23:52,330 --> 06:23:55,600
how types work for beginners, JavaScript is a little bit more


6504
06:23:55,600 --> 06:23:59,080
loose as a language and lets us kind of do whatever we want, but


6505
06:23:59,080 --> 06:24:01,840
it can cause a headache later on. So if you do run into some


6506
06:24:01,840 --> 06:24:04,870
issues, and you do run into some bugs, it might be a good idea to


6507
06:24:04,870 --> 06:24:08,380
try TypeScript on for size, and see how that fares. Well. Let's


6508
06:24:08,380 --> 06:24:11,290
go ahead and begin working on our local development


6509
06:24:11,290 --> 06:24:14,710
environment and getting set up to do everything in ethers Jas


6510
06:24:14,710 --> 06:24:17,710
and in JavaScript. Oops. And I actually went and renamed this


6511
06:24:17,710 --> 06:24:22,750
folder to ether symbol storage dash, FCC. Reason I added this


6512
06:24:22,750 --> 06:24:26,500
dash FCC is all the GitHub repositories associated with


6513
06:24:26,500 --> 06:24:30,220
this course, all the GitHub repos that have this dash FCC to


6514
06:24:30,220 --> 06:24:33,160
know that it is part of this hard hat JavaScript course.


6515
06:24:33,250 --> 06:24:36,550
Awesome. Let's jump in. Let's start working with solidity and


6516
06:24:36,550 --> 06:24:39,970
our smart contracts locally in Visual Studio code, as you can


6517
06:24:39,970 --> 06:24:43,870
probably tell by the name of this folder. And of course, if


6518
06:24:43,870 --> 06:24:46,960
you looked at the code, this project is going to be our


6519
06:24:46,960 --> 06:24:51,970
simple storage project, but developed locally using ethers.


6520
06:24:52,000 --> 06:24:54,820
So the first thing that we want to do is want to get in that


6521
06:24:54,820 --> 06:24:57,760
smart contract code. So what we can do is make sure we have the


6522
06:24:57,760 --> 06:25:01,900
Explorer selected, we can go ahead and right click and select


6523
06:25:01,930 --> 06:25:09,490
new file and do simple storage. So just close this for now. And


6524
06:25:10,270 --> 06:25:13,060
we can copy paste our simple storage code from our last


6525
06:25:13,060 --> 06:25:14,350
section into VS code.


6526
06:25:15,670 --> 06:25:18,640
If you closed remix or you forgot where it is, you can just


6527
06:25:18,640 --> 06:25:23,230
go to the ethers simple storage FCC repo, it's simple storage


6528
06:25:23,230 --> 06:25:27,760
dot Sol, and we can just copy all the code in here and then


6529
06:25:27,760 --> 06:25:31,840
come back over select Symbol storage that Saul and paste it


6530
06:25:31,840 --> 06:25:35,560
in. Now an important note about Visual Studio code is that when


6531
06:25:35,560 --> 06:25:39,430
you see this little white.up here, it means that this file


6532
06:25:39,460 --> 06:25:45,610
isn't saved to save your Git file. To save, and it'll go away


6533
06:25:45,610 --> 06:25:50,680
like that. Or what you can do is you can hit command S or Ctrl S,


6534
06:25:51,340 --> 06:25:55,840
depending on if you're on a Windows, Mac, or Linux. Now


6535
06:25:55,840 --> 06:25:58,540
you'll see here that this code is a little bit hard to read the


6536
06:25:58,540 --> 06:26:01,660
simple storage dot salt, it doesn't have the syntax


6537
06:26:01,660 --> 06:26:04,420
highlighting that we saw in remix. So we want to go ahead


6538
06:26:04,420 --> 06:26:08,830
and add a Visual Studio Code extension to give this syntax


6539
06:26:08,830 --> 06:26:11,830
highlighting. So what we can do is come over to this bar over


6540
06:26:11,830 --> 06:26:14,830
here looks like this. And if you don't see it on the left hand


6541
06:26:14,830 --> 06:26:17,560
bar, you should click these three dots, and it should be in


6542
06:26:17,560 --> 06:26:20,950
here. But we'll go ahead and click Extensions. And what we're


6543
06:26:20,950 --> 06:26:27,010
going to do is we're going to look up, solidity plus hard hat.


6544
06:26:27,790 --> 06:26:30,940
And we're going to install this solidity plus hard hat


6545
06:26:30,940 --> 06:26:35,080
extension. For VS code. Now that we have this installed, if we go


6546
06:26:35,080 --> 06:26:38,830
back over to our simple storage dot sole, you'll see that all


6547
06:26:38,830 --> 06:26:42,670
the highlighting is back in. And now it's much easier to read.


6548
06:26:42,850 --> 06:26:45,220
Right? So this is good. We have our code in here we have our


6549
06:26:45,220 --> 06:26:49,570
syntax highlighting. Now let's add an auto format or or default


6550
06:26:49,570 --> 06:26:52,810
format or right now our code is pretty good with the way that


6551
06:26:52,810 --> 06:26:57,730
it's formatted. But what if we, we accidentally do some stuff


6552
06:26:57,730 --> 06:27:05,170
like this or like this, or maybe even like this, we add a ton of


6553
06:27:05,170 --> 06:27:08,830
new lines, etc, our code can start to look pretty gross. And


6554
06:27:08,830 --> 06:27:12,610
even though the code itself is fine, and it'll run the exact


6555
06:27:12,610 --> 06:27:15,760
same way, with all this extra whitespace, it doesn't look very


6556
06:27:15,760 --> 06:27:18,520
good, right. And due to that, it can be a little bit hard to


6557
06:27:18,520 --> 06:27:22,660
read. What we want to do, then, we want to open up our settings


6558
06:27:22,720 --> 06:27:26,230
and adjust our vias code so that it auto formats whenever we


6559
06:27:26,230 --> 06:27:30,580
save, so whenever we save, so that whenever it goes from the


6560
06:27:30,580 --> 06:27:34,120
little white dot here to no white dot, this whole thing gets


6561
06:27:34,150 --> 06:27:38,740
automatically formatted to some looks really nice. Okay. So what


6562
06:27:38,740 --> 06:27:42,970
we can do is we can open up our command palette to open up our


6563
06:27:42,970 --> 06:27:46,930
command palette, you can hit View command palette, and we'll


6564
06:27:46,930 --> 06:27:50,050
get a little pop up that looks like this. Another way to open


6565
06:27:50,050 --> 06:27:52,870
up your command palette is you're gonna hit Command, Shift


6566
06:27:52,900 --> 06:27:57,040
P, or Ctrl, Shift P, depending on your Mac, or Linux or


6567
06:27:57,040 --> 06:28:00,370
Windows. And what we want to do is we want to type in settings,


6568
06:28:00,400 --> 06:28:03,490
and we're going to open Settings JSON, we don't want to open the


6569
06:28:03,490 --> 06:28:07,690
default settings JSON. We don't want to touch these. But we want


6570
06:28:07,690 --> 06:28:10,360
to open our JSON settings. You'll also notice there are


6571
06:28:10,360 --> 06:28:13,720
user settings and workspace settings. These are pieces that


6572
06:28:13,720 --> 06:28:16,960
we can adjust as well. But we're going to just go right into the


6573
06:28:16,960 --> 06:28:20,470
JSON settings. So So I already have some stuff in here, but


6574
06:28:20,470 --> 06:28:23,500
yours might be blank. Or you might have some stuff in here as


6575
06:28:23,500 --> 06:28:25,750
well. So what we're going to do is if you have stuff in here


6576
06:28:25,750 --> 06:28:29,320
already, we're going to add a comma, then we're going to do


6577
06:28:29,350 --> 06:28:36,820
quotes, solidity. Close the brackets, we're gonna do a


6578
06:28:36,820 --> 06:28:39,610
little colon and something like this. This means that we're


6579
06:28:39,610 --> 06:28:43,000
going to apply some settings to our Visual Studio Code. Whenever


6580
06:28:43,000 --> 06:28:45,790
we're working with solidity, one of the things we're going to add


6581
06:28:45,790 --> 06:28:50,260
in here is going to be an editor, Doc's default, for


6582
06:28:50,260 --> 06:28:55,660
matter. And you might even get a pop up that tells you some


6583
06:28:55,660 --> 06:28:58,570
different things that we can use for a default format or our


6584
06:28:58,570 --> 06:29:03,670
default format, or is going to be Nanak, foundation, dot hard


6585
06:29:03,670 --> 06:29:09,070
hat, hyphens solidity. This will mean that any time we go to


6586
06:29:09,070 --> 06:29:13,660
format our code, it'll use the hard hat solidity plug in, as


6587
06:29:13,660 --> 06:29:18,160
its default format, or the hard hat solidity plugin comes with


6588
06:29:18,190 --> 06:29:22,810
some formatting, and a lot of other really useful tools for us


6589
06:29:22,810 --> 06:29:26,080
writing our code. So now that we have this part in, the next


6590
06:29:26,080 --> 06:29:29,530
thing we're going to do is add format on Save. If we haven't


6591
06:29:29,530 --> 06:29:33,370
already, we could add it in here in our JSON, but I'm going to


6592
06:29:33,370 --> 06:29:36,760
add it not in the JSON file, I'm going to add it in the overall


6593
06:29:36,760 --> 06:29:40,930
file. So if we open that command palette back up, and we type in


6594
06:29:40,930 --> 06:29:45,280
settings, open user settings, this is another really good


6595
06:29:45,280 --> 06:29:48,940
place where we can look in add settings with the UI. So these


6596
06:29:48,940 --> 06:29:51,790
two do essentially the same thing. It's just that this one


6597
06:29:51,790 --> 06:29:54,730
has dials and a little bit more context versus settings that


6598
06:29:54,730 --> 06:29:57,850
JSON just says Okay, give me the raw code for it. This tells us a


6599
06:29:57,850 --> 06:30:00,220
little bit more. So you can use either one. But we're going to


6600
06:30:00,220 --> 06:30:05,350
look for format, on save. And you're going to want this


6601
06:30:05,380 --> 06:30:09,040
checked if you haven't already. This means that every time we


6602
06:30:09,040 --> 06:30:14,020
save VS code is going to try to format our code for us. So now


6603
06:30:14,020 --> 06:30:16,960
that we have this checked, we have settings dot JSON added in.


6604
06:30:16,960 --> 06:30:19,270
And remember, we want to save this. Remember, if you see this


6605
06:30:19,270 --> 06:30:21,730
white dot, that means not saved. So you're gonna want to save it


6606
06:30:22,600 --> 06:30:25,990
and close it out. Let me close this out too. If we come back in


6607
06:30:25,990 --> 06:30:28,870
here and we add a bunch of random new spaces or whatever,


6608
06:30:28,870 --> 06:30:31,390
you want to make it look a little bit ugly, and then we


6609
06:30:31,390 --> 06:30:36,550
save it. It should automatically reformat to look much nicer,


6610
06:30:36,580 --> 06:30:40,180
right. So if we do something like this, we'd save it


6611
06:30:40,180 --> 06:30:43,030
reformats it to look much nicer this one make them more readable


6612
06:30:43,030 --> 06:30:46,240
for you, and more readable for anybody else who looks at your


6613
06:30:46,240 --> 06:30:50,650
code. And it's just really nice. And this line of code for your


6614
06:30:50,650 --> 06:30:54,040
settings dot JSON is located in the full blockchain study


6615
06:30:54,040 --> 06:30:57,340
course.js. So you can also just copy paste it, we are going to


6616
06:30:57,340 --> 06:31:01,870
end up overriding that default format or with another format


6617
06:31:01,870 --> 06:31:05,770
are called prettier pretty soon. But it's great to have a default


6618
06:31:05,770 --> 06:31:08,830
format or so that if you don't feel like adding the prettier


6619
06:31:08,830 --> 06:31:12,130
code sometime in the future, you can just rely on your default


6620
06:31:12,130 --> 06:31:16,030
formatter. Awesome. While we're doing formatting, let's also add


6621
06:31:16,030 --> 06:31:19,480
a default format or for our JavaScript code. And just to


6622
06:31:19,480 --> 06:31:22,480
test it out, let's go ahead and create our new file, we'll call


6623
06:31:22,480 --> 06:31:27,550
it deploy dot Jas. And in here, we can do something like


6624
06:31:28,120 --> 06:31:29,470
function Hi,


6625
06:31:30,910 --> 06:31:37,630
console dot log, hi, and then just add and then just make it


6626
06:31:37,630 --> 06:31:40,570
look kind of gross, maybe something like this. If you hit


6627
06:31:40,570 --> 06:31:43,990
save, and it does some auto formatting, that's great, you


6628
06:31:43,990 --> 06:31:46,390
can actually turn that off by going back to your command


6629
06:31:46,390 --> 06:31:51,490
palette, and saying, Save without formatting. And that way


6630
06:31:51,490 --> 06:31:54,190
it will be saved and not formatted. The way we can add


6631
06:31:54,190 --> 06:31:56,980
some other formatting here is we're gonna install another


6632
06:31:56,980 --> 06:32:01,330
extension, this one is going to be called prettier. So we can


6633
06:32:01,330 --> 06:32:04,780
just look up prettier and extensions here. And you'll want


6634
06:32:04,780 --> 06:32:08,260
to install this prettier code formatter. So we're gonna go


6635
06:32:08,260 --> 06:32:11,620
ahead and install this. And great, now it's installed


6636
06:32:11,680 --> 06:32:15,370
prettier is a form is a code format, or that works for many


6637
06:32:15,370 --> 06:32:18,790
languages like Python, JavaScript, and even solidity.


6638
06:32:19,000 --> 06:32:22,180
And pretty soon we're going to use prettier for both JavaScript


6639
06:32:22,270 --> 06:32:25,240
and solidity. But for now, we're just going to use prettier for


6640
06:32:25,240 --> 06:32:28,600
JavaScript, we can enable this by opening back up our command


6641
06:32:28,600 --> 06:32:32,740
palette, we'll go to preferences, open Settings. And


6642
06:32:32,740 --> 06:32:36,550
the same way we added a solidity section, we're going to add a


6643
06:32:36,550 --> 06:32:41,080
JavaScript section. So we're going to add a comma here, some


6644
06:32:41,080 --> 06:32:45,850
quotes, brackets, we're going to type in JavaScript, close that


6645
06:32:46,750 --> 06:32:50,980
colon brackets. And we're going to do the same thing at the door


6646
06:32:51,010 --> 06:32:58,720
dot default, or matter. Net we're going to do and then in


6647
06:32:58,720 --> 06:33:04,870
here, we're going to do e s BENP, that prettier, hyphen VS


6648
06:33:04,870 --> 06:33:08,590
code. And this will make prettier the default editor for


6649
06:33:08,590 --> 06:33:11,320
JavaScript. Now, like I said, pretty soon, we're going to have


6650
06:33:11,350 --> 06:33:15,370
prettier override both of these for solidity and JavaScript. And


6651
06:33:15,370 --> 06:33:18,040
we're going to give prettier some parameters so that no


6652
06:33:18,040 --> 06:33:21,940
matter who uses your code, they will always have the exact same


6653
06:33:21,970 --> 06:33:25,000
formatting. But now that we have prettier in here as the default


6654
06:33:25,000 --> 06:33:28,990
editor, if we come back to deploy dot j s, and we hit save,


6655
06:33:29,410 --> 06:33:32,710
it should format to look a little something like this. Now,


6656
06:33:33,100 --> 06:33:36,640
we go ahead and we do something like this. If we go ahead and do


6657
06:33:36,640 --> 06:33:39,370
something like this, it'll reformat to look like look like


6658
06:33:39,370 --> 06:33:43,360
that. And then additionally, if you want to go back to the


6659
06:33:43,360 --> 06:33:47,680
command palette, open user settings, not in JSON mode, and


6660
06:33:47,680 --> 06:33:52,000
we go to default format, or you can actually even select the


6661
06:33:52,000 --> 06:33:56,230
default format or for all languages, if you want to use


6662
06:33:56,230 --> 06:33:59,560
prettier for all formatters. Feel free to go ahead. Alright,


6663
06:33:59,560 --> 06:34:02,950
great, got our JavaScript format, or in as well, let's


6664
06:34:02,950 --> 06:34:05,020
start writing some JavaScript code.
